"use client"

import { View, TouchableOpacity, StyleSheet, Dimensions } from "react-native"
import type { BottomTabBarProps } from "@react-navigation/bottom-tabs"
import Svg, { Path, Circle, Rect } from "react-native-svg"

const { width } = Dimensions.get("window")

// Home icon using the exact SVG provided
const HomeIcon = ({ color }: { color: string }) => (
  <Svg width="28" height="28" viewBox="0 0 38 38" fill="none">
    <Path 
      d="M18.25 28.5C18.25 28.9142 18.5858 29.25 19 29.25C19.4142 29.25 19.75 28.9142 19.75 28.5H18.25ZM19.75 23.75C19.75 23.3358 19.4142 23 19 23C18.5858 23 18.25 23.3358 18.25 23.75H19.75ZM19 29.25C19.4142 29.25 19.75 28.9142 19.75 28.5C19.75 28.0858 19.4142 27.75 19 27.75V29.25ZM8.94585 26.125L8.20071 26.0397C8.19748 26.068 8.19585 26.0965 8.19585 26.125H8.94585ZM11.0368 14.446C11.0839 14.0345 10.7885 13.6627 10.3769 13.6157C9.9654 13.5686 9.59363 13.864 9.54655 14.2756L11.0368 14.446ZM19 27.75C18.5858 27.75 18.25 28.0858 18.25 28.5C18.25 28.9142 18.5858 29.25 19 29.25V27.75ZM29.0542 26.125H29.8042C29.8042 26.0965 29.8026 26.068 29.7993 26.0397L29.0542 26.125ZM28.4535 14.2756C28.4064 13.864 28.0346 13.5686 27.6231 13.6157C27.2116 13.6627 26.9161 14.0345 26.9632 14.446L28.4535 14.2756ZM9.89761 13.7227C9.54519 13.9403 9.43592 14.4025 9.65356 14.7549C9.8712 15.1073 10.3333 15.2166 10.6858 14.9989L9.89761 13.7227ZM17.6732 9.80239L17.3482 9.12645C17.3245 9.13783 17.3015 9.15046 17.2791 9.16426L17.6732 9.80239ZM20.3269 9.80239L20.7212 9.16444C20.6988 9.15057 20.6756 9.13789 20.6518 9.12645L20.3269 9.80239ZM27.314 15.0035C27.6663 15.2213 28.1285 15.1123 28.3463 14.7599C28.5641 14.4076 28.455 13.9454 28.1027 13.7276L27.314 15.0035ZM10.686 15.0036C11.0383 14.7858 11.1474 14.3236 10.9297 13.9713C10.7119 13.6189 10.2498 13.5098 9.8974 13.7276L10.686 15.0036ZM7.5224 15.1953C7.17005 15.4131 7.06093 15.8752 7.27869 16.2276C7.49645 16.5799 7.95861 16.6891 8.31097 16.4713L7.5224 15.1953ZM28.1026 13.7276C27.7503 13.5098 27.2881 13.6189 27.0704 13.9713C26.8526 14.3236 26.9617 14.7858 27.3141 15.0036L28.1026 13.7276ZM29.6891 16.4713C30.0414 16.6891 30.5036 16.5799 30.7213 16.2276C30.9391 15.8752 30.83 15.4131 30.4776 15.1953L29.6891 16.4713ZM19.75 28.5V23.75H18.25V28.5H19.75ZM19 27.75H11.875V29.25H19V27.75ZM11.875 27.75C11.1564 27.75 10.6107 27.681 10.2508 27.4677C9.97741 27.3056 9.69585 26.9916 9.69585 26.125H8.19585C8.19585 27.3927 8.65608 28.2661 9.48591 28.758C10.2292 29.1986 11.1481 29.25 11.875 29.25V27.75ZM9.69099 26.2102L11.0368 14.446L9.54655 14.2756L8.20071 26.0397L9.69099 26.2102ZM19 29.25H26.125V27.75H19V29.25ZM26.125 29.25C26.8519 29.25 27.7708 29.1986 28.5141 28.758C29.344 28.2661 29.8042 27.3927 29.8042 26.125H28.3042C28.3042 26.9916 28.0226 27.3056 27.7493 27.4677C27.3894 27.681 26.8437 27.75 26.125 27.75V29.25ZM29.7993 26.0397L28.4535 14.2756L26.9632 14.446L28.309 26.2102L29.7993 26.0397ZM10.6858 14.9989L18.0673 10.4405L17.2791 9.16426L9.89761 13.7227L10.6858 14.9989ZM17.9982 10.4783C18.6314 10.1739 19.3687 10.1739 20.0019 10.4783L20.6518 9.12645C19.6078 8.62452 18.3922 8.62452 17.3482 9.12645L17.9982 10.4783ZM19.9325 10.4403L27.314 15.0035L28.1027 13.7276L20.7212 9.16444L19.9325 10.4403ZM9.8974 13.7276L7.5224 15.1953L8.31097 16.4713L10.686 15.0036L9.8974 13.7276ZM27.3141 15.0036L29.6891 16.4713L30.4776 15.1953L28.1026 13.7276L27.3141 15.0036ZM17.375 17.4863C17.375 16.5888 18.1026 15.8613 19 15.8613V14.3613C17.2741 14.3613 15.875 15.7604 15.875 17.4863H17.375ZM19 15.8613C19.8975 15.8613 20.625 16.5888 20.625 17.4863H22.125C22.125 15.7604 20.7259 14.3613 19 14.3613V15.8613ZM20.625 17.4863C20.625 18.3838 19.8975 19.1113 19 19.1113V20.6113C20.7259 20.6113 22.125 19.2122 22.125 17.4863H20.625ZM19 19.1113C18.1026 19.1113 17.375 18.3838 17.375 17.4863H15.875C15.875 19.2122 17.2741 20.6113 19 20.6113V19.1113Z" 
      fill={color}
    />
  </Svg>
)

// Shop icon using the exact SVG provided
const ShopIcon = ({ color }: { color: string }) => (
  <Svg width="28" height="28" viewBox="0 0 39 38" fill="none">
    <Path 
      d="M19.7535 8.6665C20.1677 8.6654 20.5026 8.32872 20.5015 7.9145C20.5004 7.50029 20.1637 7.1654 19.7495 7.16651L19.7535 8.6665ZM15.0141 12.6665L15.7641 12.6665V12.6665L15.0141 12.6665ZM14.2641 12.752C14.2641 13.1662 14.5999 13.502 15.0141 13.502C15.4283 13.502 15.7641 13.1662 15.7641 12.752H14.2641ZM14.2641 14.2498C14.2641 14.6641 14.5999 14.9998 15.0141 14.9998C15.4283 14.9998 15.7641 14.6641 15.7641 14.2498H14.2641ZM15.7641 12.752C15.7641 12.3378 15.4283 12.002 15.0141 12.002C14.5999 12.002 14.2641 12.3378 14.2641 12.752H15.7641ZM14.9243 12.0074C14.5131 12.057 14.2199 12.4306 14.2695 12.8418C14.3191 13.2531 14.6927 13.5462 15.104 13.4966L14.9243 12.0074ZM16.5975 12.6665L16.5883 13.4165H16.5975V12.6665ZM22.7503 12.6665V13.4166L22.7594 13.4164L22.7503 12.6665ZM24.2438 13.4966C24.655 13.5462 25.0286 13.2531 25.0782 12.8418C25.1278 12.4306 24.8347 12.057 24.4235 12.0074L24.2438 13.4966ZM15.1184 13.4954C15.529 13.4404 15.8172 13.063 15.7623 12.6525C15.7073 12.2419 15.3299 11.9537 14.9194 12.0086L15.1184 13.4954ZM10.2768 18.9998L9.55577 18.7934C9.55344 18.8015 9.55125 18.8097 9.54919 18.8179L10.2768 18.9998ZM8.69347 25.3332L7.96586 25.1513C7.96102 25.1706 7.95695 25.1902 7.95367 25.2099L8.69347 25.3332ZM30.6448 25.3332L31.3847 25.2104C31.3814 25.1905 31.3773 25.1708 31.3724 25.1513L30.6448 25.3332ZM29.0615 18.9998L29.7891 18.8179C29.7871 18.81 29.785 18.8021 29.7827 18.7943L29.0615 18.9998ZM24.4243 12.0087C24.0138 11.9534 23.6362 12.2413 23.5809 12.6518C23.5255 13.0623 23.8134 13.4399 24.2239 13.4953L24.4243 12.0087ZM15.7641 18.3982C15.7641 17.984 15.4283 17.6482 15.0141 17.6482C14.5999 17.6482 14.2641 17.984 14.2641 18.3982H15.7641ZM14.2641 19.7915C14.2641 20.2057 14.5999 20.5415 15.0141 20.5415C15.4283 20.5415 15.7641 20.2057 15.7641 19.7915H14.2641ZM19.5951 7.16651C19.1809 7.1654 18.8442 7.50029 18.8431 7.9145C18.842 8.32872 19.1769 8.6654 19.5911 8.6665L19.5951 7.16651ZM24.3305 12.6665L23.5805 12.6665V12.6665H24.3305ZM23.5805 12.752C23.5805 13.1662 23.9163 13.502 24.3305 13.502C24.7447 13.502 25.0805 13.1662 25.0805 12.752H23.5805ZM25.0805 12.752C25.0805 12.3378 24.7447 12.002 24.3305 12.002C23.9163 12.002 23.5805 12.3378 23.5805 12.752H25.0805ZM23.5805 14.2498C23.5805 14.6641 23.9163 14.9998 24.3305 14.9998C24.7447 14.9998 25.0805 14.6641 25.0805 14.2498H23.5805ZM25.0805 18.3998C25.0805 17.9855 24.7447 17.6498 24.3305 17.6498C23.9163 17.6498 23.5805 17.9855 23.5805 18.3998H25.0805ZM23.5805 19.7915C23.5805 20.2057 23.9163 20.5415 24.3305 20.5415C24.7447 20.5415 25.0805 20.2057 25.0805 19.7915H23.5805ZM19.7495 7.16651C16.7176 7.17459 14.2641 9.63466 14.2641 12.6665L15.7641 12.6665C15.7641 10.4615 17.5485 8.67238 19.7535 8.6665L19.7495 7.16651ZM14.2641 12.6665V12.752H15.7641V12.6665H14.2641ZM15.7641 14.2498V12.752H14.2641V14.2498H15.7641ZM15.104 13.4966C15.5964 13.4372 16.0923 13.4104 16.5883 13.4164L16.6066 11.9166C16.0444 11.9097 15.4824 11.9401 14.9243 12.0074L15.104 13.4966ZM16.5975 13.4165H22.7503V11.9165H16.5975V13.4165ZM22.7594 13.4164C23.2554 13.4104 23.7513 13.4372 24.2438 13.4966L24.4235 12.0074C23.8653 11.9401 23.3033 11.9097 22.7412 11.9166L22.7594 13.4164ZM14.9194 12.0086C13.5914 12.1864 12.541 12.6746 11.6704 13.8067C10.8485 14.8753 10.2177 16.4814 9.55577 18.7934L10.9978 19.2063C11.6564 16.9061 12.2258 15.5449 12.8594 14.7211C13.4442 13.9607 14.1046 13.6311 15.1184 13.4954L14.9194 12.0086ZM9.54919 18.8179L7.96586 25.1513L9.42107 25.5151L11.0044 19.1817L9.54919 18.8179ZM7.95367 25.2099C7.51961 27.8142 8.29496 29.685 9.77914 30.8677C11.2063 32.0049 13.1777 32.4165 15.0094 32.4165V30.9165C13.353 30.9165 11.7706 30.5365 10.7139 29.6945C9.71422 28.898 9.07566 27.6021 9.43326 25.4565L7.95367 25.2099ZM15.0094 32.4165H19.7515V30.9165H15.0094V32.4165ZM19.7515 32.4165H24.3289V30.9165H19.7515V32.4165ZM24.3289 32.4165C26.1584 32.4165 28.1289 32.0048 29.5561 30.8677C31.0402 29.6853 31.817 27.8148 31.3847 25.2104L29.9049 25.456C30.2611 27.6015 29.6216 28.8977 28.6214 29.6945C27.5645 30.5366 25.9827 30.9165 24.3289 30.9165V32.4165ZM31.3724 25.1513L29.7891 18.8179L28.3339 19.1817L29.9172 25.5151L31.3724 25.1513ZM29.7827 18.7943C29.1238 16.4824 28.4931 14.8766 27.6708 13.8078C26.8002 12.6761 25.7498 12.1874 24.4243 12.0087L24.2239 13.4953C25.2355 13.6317 25.8967 13.9616 26.4819 14.7224C27.1155 15.546 27.685 16.9066 28.3402 19.2054L29.7827 18.7943ZM14.2641 18.3982V19.7915H15.7641V18.3982H14.2641ZM19.5911 8.6665C21.7961 8.67238 23.5805 10.4615 23.5805 12.6665L25.0805 12.6665C25.0805 9.63466 22.627 7.17459 19.5951 7.16651L19.5911 8.6665ZM23.5805 12.6665V12.752H25.0805V12.6665H23.5805ZM23.5805 12.752V14.2498H25.0805V12.752H23.5805ZM23.5805 18.3998V19.7915H25.0805V18.3998H23.5805Z" 
      fill={color}
    />
  </Svg>
)

// Profile icon using the exact SVG provided
const ProfileIcon = ({ color }: { color: string }) => (
  <Svg width="28" height="28" viewBox="0 0 39 38" fill="none">
    <Path 
      fillRule="evenodd" 
      clipRule="evenodd" 
      d="M9.83337 25.1605C9.95763 28.0326 12.3788 30.2648 15.2515 30.1559H21.8319C24.7046 30.2648 27.1258 28.0326 27.25 25.1605C27.25 22.3975 24.8244 18.2207 21.8319 18.2207H15.2515C12.259 18.2207 9.83337 22.3975 9.83337 25.1605Z" 
      stroke={color} 
      strokeWidth="1.5" 
      strokeLinecap="round" 
      strokeLinejoin="round"
      fill="none"
    />
    <Path 
      fillRule="evenodd" 
      clipRule="evenodd" 
      d="M22.025 11.3998C22.025 13.3236 20.4655 14.8832 18.5417 14.8832C16.6179 14.8832 15.0583 13.3236 15.0583 11.3998C15.0583 9.47605 16.6179 7.9165 18.5417 7.9165C20.4655 7.9165 22.025 9.47605 22.025 11.3998Z" 
      stroke={color} 
      strokeWidth="1.5" 
      strokeLinecap="round" 
      strokeLinejoin="round"
      fill="none"
    />
  </Svg>
)

// Activity icon using the previously provided SVG
const AddIcon = ({ color }: { color: string }) => (
  <Svg width="28" height="28" viewBox="0 0 38 38" fill="none">
    <Path 
      d="M19.75 18.9839C19.75 18.5697 19.4143 18.2339 19 18.2339C18.5858 18.2339 18.25 18.5697 18.25 18.9839H19.75ZM18.25 22.1506C18.25 22.5648 18.5858 22.9006 19 22.9006C19.4143 22.9006 19.75 22.5648 19.75 22.1506H18.25ZM19.75 22.1506C19.75 21.7363 19.4143 21.4006 19 21.4006C18.5858 21.4006 18.25 21.7363 18.25 22.1506H19.75ZM18.25 25.3172C18.25 25.7314 18.5858 26.0672 19 26.0672C19.4143 26.0672 19.75 25.7314 19.75 25.3172H18.25ZM19 22.9006C19.4143 22.9006 19.75 22.5648 19.75 22.1506C19.75 21.7363 19.4143 21.4006 19 21.4006V22.9006ZM15.8334 21.4006C15.4192 21.4006 15.0834 21.7363 15.0834 22.1506C15.0834 22.5648 15.4192 22.9006 15.8334 22.9006V21.4006ZM19 21.4006C18.5858 21.4006 18.25 21.7363 18.25 22.1506C18.25 22.5648 18.5858 22.9006 19 22.9006V21.4006ZM22.1667 22.9006C22.5809 22.9006 22.9167 22.5648 22.9167 22.1506C22.9167 21.7363 22.5809 21.4006 22.1667 21.4006V22.9006ZM18.25 18.9839V22.1506H19.75V18.9839H18.25ZM18.25 22.1506V25.3172H19.75V22.1506H18.25ZM19 21.4006H15.8334V22.9006H19V21.4006ZM19 22.9006H22.1667V21.4006H19V22.9006Z" 
      fill={color}
    />
    <Path 
      d="M13.5 12.6665C13.5 13.0807 13.8358 13.4165 14.25 13.4165C14.6642 13.4165 15 13.0807 15 12.6665H13.5ZM16.625 8.55288L17 9.2024L16.625 8.55288ZM21.375 8.55288L21 9.2024L21.375 8.55288ZM23 12.6665C23 13.0807 23.3358 13.4165 23.75 13.4165C24.1642 13.4165 24.5 13.0807 24.5 12.6665H23ZM14.2786 13.416C14.6925 13.4002 15.0153 13.0519 14.9995 12.638C14.9837 12.2241 14.6354 11.9013 14.2215 11.917L14.2786 13.416ZM7.96579 18.2082L7.22579 18.0861C7.22437 18.0947 7.2231 18.1033 7.22198 18.112L7.96579 18.2082ZM7.9167 18.984H8.6667L8.6667 18.9823L7.9167 18.984ZM7.9167 25.3173H7.1667C7.1667 25.3269 7.16689 25.3365 7.16725 25.346L7.9167 25.3173ZM14.7377 31.6507V30.9007C14.7287 30.9007 14.7198 30.9008 14.7108 30.9012L14.7377 31.6507ZM23.2624 31.6507L23.2892 30.9012C23.2803 30.9008 23.2713 30.9007 23.2624 30.9007V31.6507ZM30.0834 25.3173L30.8328 25.346C30.8332 25.3365 30.8334 25.3269 30.8334 25.3173H30.0834ZM30.0834 18.984L29.3334 18.9831V18.984H30.0834ZM30.0343 18.2145L30.7781 18.1183C30.777 18.1099 30.7758 18.1015 30.7744 18.0932L30.0343 18.2145ZM23.7787 11.9171C23.3648 11.9012 23.0164 12.2239 23.0006 12.6378C22.9848 13.0518 23.3075 13.4001 23.7214 13.416L23.7787 11.9171ZM14.25 11.9165C13.8358 11.9165 13.5 12.2523 13.5 12.6665C13.5 13.0807 13.8358 13.4165 14.25 13.4165V11.9165ZM23.75 13.4165C24.1642 13.4165 24.5 13.0807 24.5 12.6665C24.5 12.2523 24.1642 11.9165 23.75 11.9165V13.4165ZM15 12.6665C15 11.2374 15.7624 9.91693 17 9.2024L16.25 7.90336C14.5483 8.88584 13.5 10.7015 13.5 12.6665H15ZM17 9.2024C18.2376 8.48787 19.7624 8.48787 21 9.2024L21.75 7.90336C20.0483 6.92088 17.9517 6.92088 16.25 7.90336L17 9.2024ZM21 9.2024C22.2376 9.91693 23 11.2374 23 12.6665H24.5C24.5 10.7015 23.4517 8.88584 21.75 7.90336L21 9.2024ZM14.2215 11.917C10.7202 12.0504 7.79606 14.629 7.22579 18.0861L8.70578 18.3302C9.16007 15.5763 11.4894 13.5222 14.2786 13.416L14.2215 11.917ZM7.22198 18.112C7.18452 18.4017 7.16605 18.6936 7.1667 18.9857L8.6667 18.9823C8.6662 18.7556 8.68052 18.5292 8.70959 18.3043L7.22198 18.112ZM7.1667 18.984V25.3173H8.6667V18.984H7.1667ZM7.16725 25.346C7.32216 29.3897 10.7206 32.5451 14.7646 32.4002L14.7108 30.9012C11.4933 31.0165 8.78941 28.5059 8.66615 25.2886L7.16725 25.346ZM14.7377 32.4007H23.2624V30.9007H14.7377V32.4007ZM23.2355 32.4002C27.2795 32.5451 30.6779 29.3897 30.8328 25.346L29.3339 25.2886C29.2107 28.5059 26.5068 31.0165 23.2892 30.9012L23.2355 32.4002ZM30.8334 25.3173V18.984H29.3334V25.3173H30.8334ZM30.8334 18.9849C30.8337 18.6951 30.8152 18.4057 30.7781 18.1183L29.2905 18.3107C29.3193 18.5337 29.3336 18.7583 29.3334 18.9831L30.8334 18.9849ZM30.7744 18.0932C30.2071 14.6332 27.2823 12.051 23.7787 11.9171L23.7214 13.416C26.5123 13.5227 28.8423 15.5797 29.2942 18.3358L30.7744 18.0932ZM14.25 13.4165H23.75V11.9165H14.25V13.4165Z" 
      fill={color}
    />
  </Svg>
)

// Define the routes and their corresponding icons
const routes = [
  { name: "index", icon: HomeIcon },
  { name: "shop", icon: ShopIcon },
  { name: "profile", icon: ProfileIcon },
  { name: "activity", icon: AddIcon },
]

// Update the component to accept BottomTabBarProps
export default function CustomTabBar({ state, navigation }: BottomTabBarProps) {
  return (
    <View style={styles.container}>
      <View style={styles.tabBar}>
        {routes.map((route, index) => {
          const isFocused = state.index === index
          const IconComponent = route.icon

          const onPress = () => {
            const event = navigation.emit({
              type: "tabPress",
              target: state.routes[index].key,
              canPreventDefault: true,
            })

            if (!isFocused && !event.defaultPrevented) {
              navigation.navigate(state.routes[index].name)
            }
          }

          return (
            <TouchableOpacity
              key={route.name}
              accessibilityRole="button"
              accessibilityState={isFocused ? { selected: true } : {}}
              onPress={onPress}
              style={styles.tabButton}
            >
              <IconComponent color={isFocused ? "#00FF41" : "#888888"} />
            </TouchableOpacity>
          )
        })}
      </View>
    </View>
  )
}

const styles = StyleSheet.create({
  container: {
    position: "absolute",
    bottom: 25,
    width: width,
    alignItems: "center",
  },
  tabBar: {
    flexDirection: "row",
    backgroundColor: "#222222",
    borderRadius: 30,
    height: 60,
    width: width - 40,
    justifyContent: "space-around",
    alignItems: "center",
    paddingHorizontal: 10,
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 4,
    },
    shadowOpacity: 0.3,
    shadowRadius: 4.65,
    elevation: 8,
  },
  tabButton: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    height: "100%",
  },
})